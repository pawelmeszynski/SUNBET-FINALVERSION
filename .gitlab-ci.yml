include:
  - project: 'system/gitlab-ci'
    ref: main
    file: '/test_ssh_ddev.yml'

stages:
  - "deploy test"
  - preparation
  - building
  - testing
  - security

image: edbizarro/gitlab-ci-pipeline-php:8.0

# Variables
variables:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_USER: db
  MYSQL_PASSWORD: db
  MYSQL_DATABASE: db
  DB_HOST: db

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
  stage: preparation
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
  artifacts:
    paths:
      - storage/logs # for debugging
      - vendor/
      - .env
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/

yarn:
  stage: preparation
  script:
    - yarn --version
    - yarn install --pure-lockfile
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 days
    when: always
  cache:
    paths:
      - node_modules/

build-assets:
  stage: building
  # Download the artifacts for these jobs
  dependencies:
    - composer
    - yarn
  script:
    - yarn --version
    - yarn run production --progress false
  allow_failure: true
  artifacts:
    paths:
      - public/css/
      - public/js/
      - public/fonts/
      - public/mix-manifest.json
    expire_in: 1 days
    when: always

db-seeding:
  stage: building
  services:
    - name: mysql:8.0
      alias: db
      command: [ "--default-authentication-plugin=mysql_native_password" ]
  # Download the artifacts for these jobs
  dependencies:
    - composer
    - yarn
  before_script:
    - sleep 60s
  script:
    - mysql --version
    - php artisan migrate:fresh --seed
    - mysqldump --host="${DB_HOST}" --user="${MYSQL_USER}" --password="${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" > db.sql
  artifacts:
    paths:
      - storage/logs # for debugging
      - db.sql
    expire_in: 1 days
    when: always

phpunit:
  stage: testing
  services:
    - name: mysql:5.7
      alias: db
      command: [ "--default-authentication-plugin=mysql_native_password" ]
  # Download the artifacts for these jobs
  dependencies:
    - build-assets
    - composer
    - db-seeding
  before_script:
    - sleep 60s
  script:
    - php -v
    - sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak
    - echo "" | sudo tee /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    - mysql --host="${DB_HOST}" --user="${MYSQL_USER}" --password="${MYSQL_PASSWORD}" "${MYSQL_DATABASE}" < db.sql
    - ./vendor/phpunit/phpunit/phpunit --version
    - php -d short_open_tag=off ./vendor/phpunit/phpunit/phpunit -v --colors=never --stderr
    - sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  artifacts:
    paths:
      - ./storage/logs # for debugging
    expire_in: 1 days
    when: on_failure

phpcs:
  stage: testing
  image: lorisleiva/laravel-docker
  script:
    - >
      if [[ -d modules ]]; then
        phpcs --standard=PSR12 --ignore=*.blade.php --extensions=php modules
      else
        exit 0
      fi
  dependencies: [ ]

phpcpd:
  stage: testing
  script:
    - >
      if [[ -d modules ]]; then
        test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
        php phpcpd.phar modules/ --min-lines=50
      else
        exit 0
      fi
  dependencies: [ ]
  cache:
    paths:
      - phpcpd.phar

php-security-checker:
  stage: security
  script:
    - PHP_SC_VERSION=$(curl -s "https://api.github.com/repos/fabpot/local-php-security-checker/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/;s/^v//')
    - curl -LSs https://github.com/fabpot/local-php-security-checker/releases/download/v${PHP_SC_VERSION}/local-php-security-checker_${PHP_SC_VERSION}_linux_amd64 > ./php-security-checker
    - chmod +x ./php-security-checker
    - unset PHP_SC_VERSION
    - ./php-security-checker
  dependencies: [ ]
  cache:
    paths:
      - php-security-checker
